services:
  postgres:
    build:
      context: .
      dockerfile: Dockerfile-postgres
    image: ghcr.io/wojiushixiaobai/postgres:17-pgvector
    restart: always
    environment:
      TZ: ${TZ:-Asia/Shanghai}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-Password123@postgres}
    volumes:
      - ${VOLUME_DIR:-./data}/postgresql/data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: "pg_isready -q -U $$POSTGRES_USER"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - net

  maxkb:
    build:
      context: .
      dockerfile: Dockerfile
    image: ghcr.io/wojiushixiaobai/maxkb:${VERSION:-latest}
    restart: always
    environment:
      TZ: ${TZ:-Asia/Shanghai}
      MAXKB_DB_NAME: ${DB_NAME:-maxkb}
      MAXKB_DB_HOST: ${DB_HOST:-postgres}
      MAXKB_DB_PORT: ${DB_PORT:-5432}
      MAXKB_DB_USER: ${DB_USER:-postgres}
      MAXKB_DB_PASSWORD: ${DB_PASSWORD:-Password123@postgres}
    ports:
      - ${HTTP_PORT:-8080}:8080
    volumes:
      - ${VOLUME_DIR:-./data}/maxkb/local:/opt/maxkb/local
      - ${VOLUME_DIR:-./data}/maxkb/logs:/opt/maxkb/app/data/logs
      - ${VOLUME_DIR:-./data}/maxkb/python-packages:/opt/maxkb/app/sandbox/python-packages
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - net

networks:
  net: